<UserControl  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
              xmlns:baseType="clr-namespace:BaseType;assembly=BaseType"
             x:Class="ManagementGui.View.Document.TaskDocument"
             xmlns:local="clr-namespace:ManagementGui.ViewModel.Validation"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:rateControl="clr-namespace:ManagementGui.View.Control"
              xmlns:converters="clr-namespace:ManagementGui.View.ViewConverter"
              xmlns:document="clr-namespace:ManagementGui.View.Document"
              xmlns:viewModel="clr-namespace:ManagementGui.ViewModel"
              mc:Ignorable="d" MinWidth="600"   MinHeight="500" Background="#FFFFFFFF">
    <i:Interaction.Behaviors>
        <local:ValidationExceptionBehavior />
    </i:Interaction.Behaviors>
    <UserControl.DataContext>
        <viewModel:TaskDocumentViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>

        <ObjectDataProvider x:Key="StTask"
                            MethodName="GetValues" 
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="baseType:StatusTask" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <converters:EnumDescriptionConverter x:Key="EnumItemsConverter"/>
        <converters:HtmlToFlowDocumentConverter x:Key="HtmlToFlowDocConverter"/>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin"
                    Value="4" />
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin"
                    Value="4" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError"
                         Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <ScrollViewer>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="83*"/>
                <ColumnDefinition Width="158*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" ></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <WrapPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                <Button Command="{Binding Save}">Сохранить</Button>
            </WrapPanel>
            <WrapPanel Height="auto" Grid.Row="1" Orientation="Horizontal" Grid.ColumnSpan="2">
                <StackPanel Orientation="Vertical" Margin="10,2,0,2">
                    <Label>Название</Label>
                    <TextBox Height="24" Margin="0" Width="200" Text="{Binding Task.NameTask, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsChecked, ElementName=EdProp}"></TextBox>
                </StackPanel>
                <StackPanel  Margin="10,2,0,2" Orientation="Vertical">
                    <Label>Коэфицент сложности</Label>
                    <rateControl:RatingControl Width="130" Height="25" IsEnabled="{Binding IsChecked, ElementName=EdProp}" 
                                               RatingValue="{Binding Task.TaskRating}"/>

                </StackPanel>
                <StackPanel  Margin="10,2,0,2"  Orientation="Vertical">
                    <Label>Дата выполнения</Label>
                    <xctk:DateTimePicker  
                                 Value="{Binding Task.DateFinish}"
                                 Width="200"
                                 VerticalAlignment="Top"
                                 IsReadOnly="False"
                                 IsEnabled="{Binding IsChecked, ElementName=EdProp}" 
                                 Format="FullDateTime" Height="26"/>

                </StackPanel>
                <StackPanel  Margin="10,2,0,2" Orientation="Vertical">
                    <Label>Статус</Label>

                    <ComboBox  IsSynchronizedWithCurrentItem="True" x:Name="TypeAuthentication" Width="150" 
                                ItemsSource="{Binding Source={StaticResource StTask}}"
                                SelectedItem="{Binding Status,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                IsEnabled="{Binding IsChecked, ElementName=EdProp}" VerticalAlignment="Top">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Label  Content="{Binding Path=.,Mode=OneWay, Converter={StaticResource EnumItemsConverter}}"
                                Height="Auto"
                                Margin="0" 
                                VerticalAlignment="Center"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </WrapPanel>
            <Expander Grid.Row="2" Header="Подробнее о задаче" Grid.ColumnSpan="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <WrapPanel Orientation="Horizontal">
                        <CheckBox Margin="4,0,4,0" Content="Разрешить редактирование" Name="EdProp" IsChecked="False" FlowDirection="RightToLeft"/>
                        <StackPanel Orientation="Horizontal">
                            <Label>Последнее изменение</Label>
                            <Label Margin="4,0,4,0" Content="{Binding Task.DateUpdate, StringFormat='{}{0:dd MMMM yyyy hh:mm}'}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label>Дата создания</Label>
                            <Label Margin="4,0,4,0" Content="{Binding Task.DateCreate, StringFormat='{}{0:dd MMMM yyyy hh:mm}'}"/>
                            </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label>Дата закрытия:</Label>
                            <Label Margin="4,0,4,0" Content="{Binding Task.DateClose, StringFormat='{}{0:dd MMMM yyyy hh:mm}'}"/>
                        </StackPanel>
                    </WrapPanel>
                    <StackPanel Grid.Row="1">
                        <StackPanel Margin="5" Orientation="Horizontal">
                            <Label>Описание задачи</Label>
                            <ComboBox SelectionChanged="CBTypeComment_OnSelectionChanged" Name="CBTypeComment" Width="250" HorizontalAlignment="Left"/>
                        </StackPanel>
                        <!--<richTextEditor:RichTextEditor x:Name="HtmlEditor"  />-->
                        <TextBox Name="HtmlEditor" MaxHeight="210" MinHeight="80" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible"/>
                    </StackPanel>
                </Grid>
            </Expander>
            <Expander Grid.Row="3" Header="Участники и уведомления" Grid.ColumnSpan="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <WrapPanel Grid.Row="0">
                        <Button Click="AddUser">Добавить сотрудника</Button>
                        <Button Command="{Binding SetNotivicationAll}">
                            <StackPanel Orientation="Horizontal">
                                <Label FontSize="12" FontWeight="Bold" >ОПОВЕСТИТЬ ВСЕХ ЧЕРЕЗ</Label>
                                <TextBox Width="20" Text="{Binding DayNotivication,ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </StackPanel>
                        </Button>
                    </WrapPanel>
                    <Grid Grid.Row="1">
                        <Grid Height="50" VerticalAlignment="Top"  Name="UsersAndNotificationTreeHeader" >
                            <Grid.ColumnDefinitions >
                                <ColumnDefinition MinWidth="220" />
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition  Height="22"></RowDefinition>
                                <RowDefinition  Height="22"></RowDefinition>
                                <RowDefinition  Height="auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Margin="3"  TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" x:Name="column1">Пользователь</TextBlock>
                            <TextBlock Grid.Row="0" Margin="3" Grid.Column="2" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" x:Name="Column3U" >Комментарий</TextBlock>
                            <TextBlock Grid.Row="1" Grid.Column="0" Margin="3"  TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" x:Name="column2">Время уведомления</TextBlock>
                            <TextBlock Grid.Row="1" Grid.Column="2" Margin="4" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" x:Name="Column3B">Описание</TextBlock>
                            <GridSplitter Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" ResizeDirection="Columns" Width="3" Background="Black" Opacity="0.1" ResizeBehavior="PreviousAndNext"/>
                            <GridSplitter Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" ResizeDirection="Columns" Width="3" Background="Black" Opacity="0.1" ResizeBehavior="PreviousAndNext"/>
                        </Grid>
                    </Grid>
                    <TreeView   Grid.Row="2" Name="UsersAndNotifications" BorderThickness="0" ItemsSource="{Binding Users}">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                            <Grid>
                                                <Grid.Resources>
                                                    <PathGeometry x:Key="TreeArrow">
                                                        <PathGeometry.Figures>
                                                            <PathFigureCollection>
                                                                <PathFigure IsFilled="True" StartPoint="0 0" IsClosed="True">
                                                                    <PathFigure.Segments>
                                                                        <PathSegmentCollection>
                                                                            <LineSegment Point="0 6"/>
                                                                            <LineSegment Point="6 0"/>
                                                                        </PathSegmentCollection>
                                                                    </PathFigure.Segments>
                                                                </PathFigure>
                                                            </PathFigureCollection>
                                                        </PathGeometry.Figures>
                                                    </PathGeometry>
                                                    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="Width" Value="16"/>
                                                        <Setter Property="Height" Value="16"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                                                                        <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                                                                            <Path.RenderTransform>
                                                                                <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                                                            </Path.RenderTransform>
                                                                        </Path>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF1BBBFA"/>
                                                                            <Setter TargetName="ExpandPath" Property="Fill" Value="Transparent"/>
                                                                        </Trigger>

                                                                        <Trigger Property="IsChecked" Value="True">
                                                                            <Setter TargetName="ExpandPath" Property="RenderTransform">
                                                                                <Setter.Value>
                                                                                    <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter TargetName="ExpandPath" Property="Fill" Value="#FF595959"/>
                                                                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF262626"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Grid.Resources>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                                                <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Border>
                                                <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsExpanded" Value="false">
                                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="HasItems" Value="false">
                                                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="true">
                                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="true"/>
                                                        <Condition Property="IsSelectionActive" Value="false"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                        </TreeView.ItemContainerStyle>
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type document:UserTreeViewModel}" ItemsSource="{Binding Children}">
                                <DockPanel LastChildFill="True">
                                    <DockPanel.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Добавить участника" Click="AddUser"></MenuItem>
                                            <MenuItem Header="Убрать участника" Click="RemoveUser"></MenuItem>
                                            <MenuItem Header="Добавить уведомление" Click="AddNotivication"></MenuItem>
                                        </ContextMenu>
                                    </DockPanel.ContextMenu>
                                    <TextBlock Text="{Binding Name}" Width="auto" Margin="3"/>
                                    <TextBlock Text="{Binding Description}" Width="{Binding ActualWidth, ElementName=Column3U}"  Margin="3"/>
                                </DockPanel>
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type document:NotivicationTreeViewModel}">
                                <DockPanel LastChildFill="True">
                                    <DockPanel.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Редактировать уведомление" Click="EditNotivication"></MenuItem>
                                            <MenuItem Header="Удалить уведомление" Click="RemoveNotivication"></MenuItem>
                                            <MenuItem Header="Добавить уведомление" Click="AddNotivication"></MenuItem>
                                        </ContextMenu>
                                    </DockPanel.ContextMenu>
                                    <TextBlock Text="{Binding DateNotivication,StringFormat='{}{0:dd MMMM yyyy hh:mm tt}'}" Width="auto" Margin="3"/>
                                    <TextBlock Text="{Binding Description}" Width="{Binding ActualWidth, ElementName=Column3B}" Margin="3"/>
                                </DockPanel>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                </Grid>
            </Expander>
            <Expander Expanded="MessageExpandetOpen" Grid.Row="4" Header="Переписка" Grid.ColumnSpan="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <WrapPanel Grid.Row="0" Orientation="Horizontal">
                        <Button Click="MessageSave">Сохранить сообщение</Button>

                    </WrapPanel>
                    <!--<xctk:RichTextBox Name="RichTextBox" Text="{Binding  MessageSend, 
                    Converter={StaticResource HtmlToFlowDocConverter}, 
                     Mode=TwoWay}"   Grid.Row="1"  BorderBrush="Gray">
                        <xctk:RichTextBoxFormatBarManager.FormatBar>
                            <xctk:RichTextBoxFormatBar />
                        </xctk:RichTextBoxFormatBarManager.FormatBar>
                        <xctk:RichTextBox.Document>
                            <FlowDocument>

                            </FlowDocument>
                        </xctk:RichTextBox.Document>
                    </xctk:RichTextBox>-->
                    <TextBox 
                        TextBlock.LineHeight="15" 
                        TextBlock.LineStackingStrategy="BlockLineHeight"
                        Grid.Row="1" Name="RichTextBox" MaxHeight="150"  MinHeight="80" Text="{Binding MessageSend}" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" Margin="2"/>
                    <ListBox Grid.Row="2" MinHeight="200" MaxHeight="1400" Name="LBComments" ItemsSource="{Binding Comments}" >
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type baseType:TaskComment}">
                                <Grid Margin="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Border >
                                        <WrapPanel Background="DarkCyan"  Margin="2" Height="35" Orientation="Horizontal">
                                            <Label Content="Дата: "/>
                                            <Label Content="{Binding DateMessage, StringFormat='{}{0:dd MMMM yyyy hh:mm tt}'}"></Label>
                                            <Label Content="Автор: "/>
                                            <Label Content="{Binding AuthorApplicationUser.LoginName}"></Label>
                                        </WrapPanel>
                                    </Border>
                                    <!--<FlowDocumentScrollViewer  Document="{Binding Message, Converter={StaticResource HtmlToFlowDocConverter}}"/>-->
                                    <TextBlock Margin="0,0,2,0" Grid.Row="1" MaxHeight="60" Text="{Binding Message}" TextWrapping="Wrap" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Expander>
        </Grid>
    </ScrollViewer>
</UserControl>
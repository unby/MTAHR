<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:utils="clr-namespace:ManagementGui.View.ViewConverter"
             x:Class="ManagementGui.View.Document.UserDocument"
             xmlns:local="clr-namespace:ManagementGui.ViewModel.Validation"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             xmlns:viewModel="clr-namespace:ManagementGui.ViewModel"
             mc:Ignorable="d" MinWidth="700" MinHeight="500" Background="#FFFFFFFF">
    <i:Interaction.Behaviors>
        <local:ValidationExceptionBehavior />
    </i:Interaction.Behaviors>
    <UserControl.DataContext>
        <viewModel:UserDocumentViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>  
        <utils:EnumDescriptionConverter x:Key="EnumItemsConverter"/>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="4" />
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="4" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <ScrollViewer>
        <Grid>
            <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="{Binding Height, ElementName=CommonExpander}"/>
            <RowDefinition Height="{Binding Height, ElementName=ContactExpander}"/>
            <RowDefinition Height="{Binding Height, ElementName=ServiceExpander}"/>
            <RowDefinition/>


        </Grid.RowDefinitions>
        <Grid/>
            <StackPanel Orientation="Horizontal" Grid.Row="0">
                <Button  Command="{Binding Path=Save}"
						  HorizontalAlignment="Right" Margin="20,2,4,2" MinWidth="60" IsEnabled="{Binding AllPropertiesValid}">Сохранить</Button>
                <Button Command="{Binding Path=CreateTask}" Margin="4,2" >Создать задачу</Button>
                <Button Command="{Binding Path=ShowTask}" Margin="4,2" >Показать последние задачи</Button>
            </StackPanel>
        <Expander IsExpanded="True" Name="CommonExpander" Header="Основное" Grid.Row="1"  VerticalAlignment="Top" >
            <Grid Background="#FFFFFFFF">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="106*"/>
                    <ColumnDefinition Width="35"/>
                    <ColumnDefinition Width="132*"/>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="85*"/>
                    <ColumnDefinition Width="95"/>
                    <ColumnDefinition Width="96*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Фамилия" Grid.Column="0" />
                    <TextBox x:Name="TBSureName" Grid.Column="1" Text="{Binding Surname, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Имя" Grid.Column="2" />
                    <TextBox x:Name="TBName" Grid.Column="3" Text="{ Binding  Name,  ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Отчество" Grid.Column="4" />
                    <TextBox x:Name="TBMidleNAme" Grid.Column="5" Text="{Binding MiddleName,  ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Дата роджения" Grid.Column="6" />
                    <DatePicker Grid.Column="7" SelectedDate="{Binding BirthDate,  UpdateSourceTrigger=PropertyChanged}" Margin="5,0,5,0" />
            </Grid>
        </Expander>
        <Expander IsExpanded="True"  Name="ContactExpander" Header="Контакты" Grid.Row="2" Margin="5,0,5,5">
            <Grid Background="#FFFFFFFF">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="313*"/>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="205*"/>
                </Grid.ColumnDefinitions>
                <Label Content="Почтовый адрес"  Grid.Column="0" />
                    <TextBox x:Name="TBEmail" Grid.Column="1" Text="{Binding Email, ValidatesOnDataErrors=True , UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="173" />
                <Label Content="Телефон" Grid.Column="2"  />
                    <TextBox x:Name="TBPhone" Grid.Column="3" Text="{Binding User.PhoneNumber, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Expander>
        <Expander IsExpanded="True" Name="ServiceExpander" Header="Служебное" Grid.Row="3" Margin="5,0,5,5">
            <Grid Background="#FFFFFFFF">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80"/>
                    <ColumnDefinition Width="72"/>
                    <ColumnDefinition Width="320"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="22*"/>
                </Grid.ColumnDefinitions>
                    <CheckBox Margin="3,6,5,5" Grid.Column="0" x:Name="ChBIsWork" Content="Работает" IsChecked="{Binding User.IsWork}" FlowDirection="RightToLeft"/>
                <Label Content="Должность" Grid.Column="1" Margin="0,0,0,0"  />
                <TextBox x:Name="TBPost" Grid.Column="2" Text="{Binding User.Post,Mode=TwoWay}"></TextBox>
                <!--<Label Content="Роль" Grid.Column="3" Margin="0,0,0,0"  />
                <ComboBox Grid.Column="4" SelectedItem="{Binding User.Role,Converter={StaticResource EnumItemsConverter}}" ItemsSource="{Binding RoleList,Converter={StaticResource EnumItemsConverter}}" />-->
            </Grid>
        </Expander>
            <TabControl Grid.Row="4" Margin="10" BorderBrush="Gainsboro">
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="Gainsboro" CornerRadius="4,4,0,0" Margin="2,0">
                                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="GhostWhite" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
                <TabItem Header="Задачи" ToolTip="За предыдущий месяц включительно">
                    <Grid>
                        <DataGrid Name="TasksGrid" 
                                  IsReadOnly="True"
                                  SelectedItem="{Binding SelectedTask}" 
                                  ItemsSource="{Binding UserTasks}" 
                                  AutoGenerateColumns="False">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <command:EventToCommand Command="{Binding MouseDoubleClickTasksGridCommand}"  
                                CommandParameter="{Binding ElementName=TasksGrid, Path=SelectedItem}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <DataGrid.Columns>
                                <DataGridTextColumn Width="170" Header="Последние изменение" Binding="{Binding LastUpdate, StringFormat={}{0:dd MMMM yyyy HH:mm}}" />
                                <DataGridTextColumn Width="100" Header="Статус" Binding="{Binding Status,Converter={StaticResource EnumItemsConverter}}" />
                                <DataGridTextColumn Width="auto" MaxWidth="600" Header="Название" Binding="{Binding NameTask}"  />
                                <DataGridTextColumn Width="auto" MaxWidth="600" Header="Последний комментарий" Binding="{Binding LastComment}"  />
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>              
                </TabItem>
                       
            </TabControl>
        </Grid>
    </ScrollViewer>
</UserControl>
